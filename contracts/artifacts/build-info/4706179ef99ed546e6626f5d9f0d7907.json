{
	"id": "4706179ef99ed546e6626f5d9f0d7907",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/4_Test.sol": {
				"content": "pragma solidity >=0.7.0 <0.9.0;\n\ncontract Test {\n    // bool constant trueOrFalse = true\n    // uint number = 200000000;\n    // int negativeNumber = -2\n    // string randomString = \"Hello\"\n    // initializing an array of strings\n    // string[] public firstArrString = [\"hi\", \"hello\"];\n\n    // Person public person;\n\n    // struct Person{\n    //     string firstname;\n    //     string lastname;\n    //     uint256 age;\n    // }\n\n    // function doThings() public {\n    //     person = Person({\n    //         firstname: \"Kenneth\",\n    //         lastname: \"Lartey\",\n    //         age: 22\n    //     });\n    // }\n\n    // mapping introduction \n    // address user = 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4;\n\n    // mapping(address => uint) public balances;\n\n    // function doThings() public {\n    //     balances[user] = 100;\n    // }\n     \n    address public Owner;\n\n    constructor() {\n        Owner = msg.sender;\n    }\n\n    function changeOwner(address newOwner) public {\n        require(msg.sender == Owner, \"Only owners are allowed to change other owners\");\n        Owner = newOwner;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/4_Test.sol": {
				"Test": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "Owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "changeOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/4_Test.sol\":33:1100  contract Test {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/4_Test.sol\":876:925  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/4_Test.sol\":908:918  msg.sender */\n  caller\n    /* \"contracts/4_Test.sol\":900:905  Owner */\n  0x00\n  dup1\n    /* \"contracts/4_Test.sol\":900:918  Owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/4_Test.sol\":33:1100  contract Test {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/4_Test.sol\":33:1100  contract Test {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa6f9dae1\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb4a99a4e\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/4_Test.sol\":931:1098  function changeOwner(address newOwner) public {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/4_Test.sol\":849:869  address public Owner */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/4_Test.sol\":931:1098  function changeOwner(address newOwner) public {... */\n    tag_8:\n        /* \"contracts/4_Test.sol\":1009:1014  Owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/4_Test.sol\":995:1014  msg.sender == Owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/4_Test.sol\":995:1005  msg.sender */\n      caller\n        /* \"contracts/4_Test.sol\":995:1014  msg.sender == Owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/4_Test.sol\":987:1065  require(msg.sender == Owner, \"Only owners are allowed to change other owners\") */\n      tag_14\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_15\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_14:\n        /* \"contracts/4_Test.sol\":1083:1091  newOwner */\n      dup1\n        /* \"contracts/4_Test.sol\":1075:1080  Owner */\n      0x00\n      dup1\n        /* \"contracts/4_Test.sol\":1075:1091  Owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/4_Test.sol\":931:1098  function changeOwner(address newOwner) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/4_Test.sol\":849:869  address public Owner */\n    tag_10:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_18:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_20\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_21\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_7:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_23\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":228:347   */\n    tag_23:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_26\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_18\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:605   */\n    tag_27:\n        /* \"#utility.yul\":574:598   */\n      tag_29\n        /* \"#utility.yul\":592:597   */\n      dup2\n        /* \"#utility.yul\":574:598   */\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":569:572   */\n      dup3\n        /* \"#utility.yul\":562:599   */\n      mstore\n        /* \"#utility.yul\":487:605   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":611:977   */\n    tag_31:\n        /* \"#utility.yul\":753:756   */\n      0x00\n        /* \"#utility.yul\":774:841   */\n      tag_33\n        /* \"#utility.yul\":838:840   */\n      0x2e\n        /* \"#utility.yul\":833:836   */\n      dup4\n        /* \"#utility.yul\":774:841   */\n      tag_34\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":767:841   */\n      swap2\n      pop\n        /* \"#utility.yul\":850:943   */\n      tag_35\n        /* \"#utility.yul\":939:942   */\n      dup3\n        /* \"#utility.yul\":850:943   */\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":968:970   */\n      0x40\n        /* \"#utility.yul\":963:966   */\n      dup3\n        /* \"#utility.yul\":959:971   */\n      add\n        /* \"#utility.yul\":952:971   */\n      swap1\n      pop\n        /* \"#utility.yul\":611:977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":983:1205   */\n    tag_12:\n        /* \"#utility.yul\":1076:1080   */\n      0x00\n        /* \"#utility.yul\":1114:1116   */\n      0x20\n        /* \"#utility.yul\":1103:1112   */\n      dup3\n        /* \"#utility.yul\":1099:1117   */\n      add\n        /* \"#utility.yul\":1091:1117   */\n      swap1\n      pop\n        /* \"#utility.yul\":1127:1198   */\n      tag_38\n        /* \"#utility.yul\":1195:1196   */\n      0x00\n        /* \"#utility.yul\":1184:1193   */\n      dup4\n        /* \"#utility.yul\":1180:1197   */\n      add\n        /* \"#utility.yul\":1171:1177   */\n      dup5\n        /* \"#utility.yul\":1127:1198   */\n      tag_27\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":983:1205   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1211:1630   */\n    tag_16:\n        /* \"#utility.yul\":1377:1381   */\n      0x00\n        /* \"#utility.yul\":1415:1417   */\n      0x20\n        /* \"#utility.yul\":1404:1413   */\n      dup3\n        /* \"#utility.yul\":1400:1418   */\n      add\n        /* \"#utility.yul\":1392:1418   */\n      swap1\n      pop\n        /* \"#utility.yul\":1464:1473   */\n      dup2\n        /* \"#utility.yul\":1458:1462   */\n      dup2\n        /* \"#utility.yul\":1454:1474   */\n      sub\n        /* \"#utility.yul\":1450:1451   */\n      0x00\n        /* \"#utility.yul\":1439:1448   */\n      dup4\n        /* \"#utility.yul\":1435:1452   */\n      add\n        /* \"#utility.yul\":1428:1475   */\n      mstore\n        /* \"#utility.yul\":1492:1623   */\n      tag_40\n        /* \"#utility.yul\":1618:1622   */\n      dup2\n        /* \"#utility.yul\":1492:1623   */\n      tag_31\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":1484:1623   */\n      swap1\n      pop\n        /* \"#utility.yul\":1211:1630   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1717:1886   */\n    tag_34:\n        /* \"#utility.yul\":1801:1812   */\n      0x00\n        /* \"#utility.yul\":1835:1841   */\n      dup3\n        /* \"#utility.yul\":1830:1833   */\n      dup3\n        /* \"#utility.yul\":1823:1842   */\n      mstore\n        /* \"#utility.yul\":1875:1879   */\n      0x20\n        /* \"#utility.yul\":1870:1873   */\n      dup3\n        /* \"#utility.yul\":1866:1880   */\n      add\n        /* \"#utility.yul\":1851:1880   */\n      swap1\n      pop\n        /* \"#utility.yul\":1717:1886   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1892:1988   */\n    tag_30:\n        /* \"#utility.yul\":1929:1936   */\n      0x00\n        /* \"#utility.yul\":1958:1982   */\n      tag_45\n        /* \"#utility.yul\":1976:1981   */\n      dup3\n        /* \"#utility.yul\":1958:1982   */\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1947:1982   */\n      swap1\n      pop\n        /* \"#utility.yul\":1892:1988   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1994:2120   */\n    tag_46:\n        /* \"#utility.yul\":2031:2038   */\n      0x00\n        /* \"#utility.yul\":2071:2113   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2064:2069   */\n      dup3\n        /* \"#utility.yul\":2060:2114   */\n      and\n        /* \"#utility.yul\":2049:2114   */\n      swap1\n      pop\n        /* \"#utility.yul\":1994:2120   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2249:2366   */\n    tag_25:\n        /* \"#utility.yul\":2358:2359   */\n      0x00\n        /* \"#utility.yul\":2355:2356   */\n      dup1\n        /* \"#utility.yul\":2348:2360   */\n      revert\n        /* \"#utility.yul\":2372:2605   */\n    tag_36:\n        /* \"#utility.yul\":2512:2546   */\n      0x4f6e6c79206f776e6572732061726520616c6c6f77656420746f206368616e67\n        /* \"#utility.yul\":2508:2509   */\n      0x00\n        /* \"#utility.yul\":2500:2506   */\n      dup3\n        /* \"#utility.yul\":2496:2510   */\n      add\n        /* \"#utility.yul\":2489:2547   */\n      mstore\n        /* \"#utility.yul\":2581:2597   */\n      0x65206f74686572206f776e657273000000000000000000000000000000000000\n        /* \"#utility.yul\":2576:2578   */\n      0x20\n        /* \"#utility.yul\":2568:2574   */\n      dup3\n        /* \"#utility.yul\":2564:2579   */\n      add\n        /* \"#utility.yul\":2557:2598   */\n      mstore\n        /* \"#utility.yul\":2372:2605   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2611:2733   */\n    tag_21:\n        /* \"#utility.yul\":2684:2708   */\n      tag_53\n        /* \"#utility.yul\":2702:2707   */\n      dup2\n        /* \"#utility.yul\":2684:2708   */\n      tag_30\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":2677:2682   */\n      dup2\n        /* \"#utility.yul\":2674:2709   */\n      eq\n        /* \"#utility.yul\":2664:2727   */\n      tag_54\n      jumpi\n        /* \"#utility.yul\":2723:2724   */\n      0x00\n        /* \"#utility.yul\":2720:2721   */\n      dup1\n        /* \"#utility.yul\":2713:2725   */\n      revert\n        /* \"#utility.yul\":2664:2727   */\n    tag_54:\n        /* \"#utility.yul\":2611:2733   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cac7ce6683ac33f5a03fbdafe70e1854c53b297b4d0bc99b5a1dda211c54cb5064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506102fd806100606000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063a6f9dae11461003b578063b4a99a4e14610057575b600080fd5b6100556004803603810190610050919061017f565b610075565b005b61005f610146565b60405161006c91906101de565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610103576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100fa906101f9565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081359050610179816102b0565b92915050565b6000602082840312156101955761019461025c565b5b60006101a38482850161016a565b91505092915050565b6101b58161022a565b82525050565b60006101c8602e83610219565b91506101d382610261565b604082019050919050565b60006020820190506101f360008301846101ac565b92915050565b60006020820190508181036000830152610212816101bb565b9050919050565b600082825260208201905092915050565b60006102358261023c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f4f6e6c79206f776e6572732061726520616c6c6f77656420746f206368616e6760008201527f65206f74686572206f776e657273000000000000000000000000000000000000602082015250565b6102b98161022a565b81146102c457600080fd5b5056fea2646970667358221220cac7ce6683ac33f5a03fbdafe70e1854c53b297b4d0bc99b5a1dda211c54cb5064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x2FD DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA6F9DAE1 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xB4A99A4E EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x17F JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH2 0x146 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x1DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x103 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA SWAP1 PUSH2 0x1F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x179 DUP2 PUSH2 0x2B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x195 JUMPI PUSH2 0x194 PUSH2 0x25C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A3 DUP5 DUP3 DUP6 ADD PUSH2 0x16A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B5 DUP2 PUSH2 0x22A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C8 PUSH1 0x2E DUP4 PUSH2 0x219 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D3 DUP3 PUSH2 0x261 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x212 DUP2 PUSH2 0x1BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235 DUP3 PUSH2 0x23C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F6E6C79206F776E6572732061726520616C6C6F77656420746F206368616E67 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65206F74686572206F776E657273000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2B9 DUP2 PUSH2 0x22A JUMP JUMPDEST DUP2 EQ PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0xC7 0xCE PUSH7 0x83AC33F5A03FBD 0xAF 0xE7 0xE XOR SLOAD 0xC5 EXTCODESIZE 0x29 PUSH28 0x4D0BC99B5A1DDA211C54CB5064736F6C634300080700330000000000 ",
							"sourceMap": "33:1067:0:-:0;;;876:49;;;;;;;;;;908:10;900:5;;:18;;;;;;;;;;;;;;;;;;33:1067;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Owner_3": {
									"entryPoint": 326,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@changeOwner_30": {
									"entryPoint": 117,
									"id": 30,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_592e9d76eb64ce2e10ec49dfc7227ecdb00dbaded86f5a41c72a0ca23a0db196_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_592e9d76eb64ce2e10ec49dfc7227ecdb00dbaded86f5a41c72a0ca23a0db196__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_592e9d76eb64ce2e10ec49dfc7227ecdb00dbaded86f5a41c72a0ca23a0db196": {
									"entryPoint": 609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2736:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:1"
															},
															"nodeType": "YulIf",
															"src": "228:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:1",
														"type": ""
													}
												],
												"src": "152:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "569:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "592:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "574:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "574:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "540:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "547:3:1",
														"type": ""
													}
												],
												"src": "487:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "757:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "767:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "833:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "838:2:1",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "774:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "774:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "767:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "939:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_592e9d76eb64ce2e10ec49dfc7227ecdb00dbaded86f5a41c72a0ca23a0db196",
																	"nodeType": "YulIdentifier",
																	"src": "850:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "850:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "850:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "963:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "968:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "959:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "959:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_592e9d76eb64ce2e10ec49dfc7227ecdb00dbaded86f5a41c72a0ca23a0db196_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "753:3:1",
														"type": ""
													}
												],
												"src": "611:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1081:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1091:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1103:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1114:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1099:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1099:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1091:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1171:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1184:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1195:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1180:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1180:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1127:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1053:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1065:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1076:4:1",
														"type": ""
													}
												],
												"src": "983:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1382:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1392:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1404:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1400:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1392:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1439:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1450:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1435:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1435:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1458:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1464:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1454:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1454:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1428:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1428:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1428:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1484:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1618:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_592e9d76eb64ce2e10ec49dfc7227ecdb00dbaded86f5a41c72a0ca23a0db196_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1492:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1492:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1484:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_592e9d76eb64ce2e10ec49dfc7227ecdb00dbaded86f5a41c72a0ca23a0db196__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1362:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1377:4:1",
														"type": ""
													}
												],
												"src": "1211:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1676:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1686:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1702:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1696:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1669:6:1",
														"type": ""
													}
												],
												"src": "1636:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1813:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1830:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1835:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1851:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1870:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1875:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1866:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1866:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1851:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1785:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1790:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1801:11:1",
														"type": ""
													}
												],
												"src": "1717:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1937:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1947:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1976:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1958:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1958:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1947:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1919:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1929:7:1",
														"type": ""
													}
												],
												"src": "1892:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2039:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2049:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2064:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2071:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2060:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2060:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2049:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2021:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2031:7:1",
														"type": ""
													}
												],
												"src": "1994:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2215:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2232:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2235:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2225:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2225:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2225:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2126:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2338:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2355:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2358:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2348:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2348:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2348:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2249:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2478:127:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2500:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2508:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2496:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2496:14:1"
																	},
																	{
																		"hexValue": "4f6e6c79206f776e6572732061726520616c6c6f77656420746f206368616e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2512:34:1",
																		"type": "",
																		"value": "Only owners are allowed to chang"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2489:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2489:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2489:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2568:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2576:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2564:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2564:15:1"
																	},
																	{
																		"hexValue": "65206f74686572206f776e657273",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2581:16:1",
																		"type": "",
																		"value": "e other owners"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2557:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2557:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2557:41:1"
														}
													]
												},
												"name": "store_literal_in_memory_592e9d76eb64ce2e10ec49dfc7227ecdb00dbaded86f5a41c72a0ca23a0db196",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2470:6:1",
														"type": ""
													}
												],
												"src": "2372:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2654:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2711:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2720:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2723:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2713:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2713:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2713:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2677:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2702:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2684:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2684:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2674:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2674:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2667:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2667:43:1"
															},
															"nodeType": "YulIf",
															"src": "2664:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2647:5:1",
														"type": ""
													}
												],
												"src": "2611:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_592e9d76eb64ce2e10ec49dfc7227ecdb00dbaded86f5a41c72a0ca23a0db196_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_592e9d76eb64ce2e10ec49dfc7227ecdb00dbaded86f5a41c72a0ca23a0db196(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_592e9d76eb64ce2e10ec49dfc7227ecdb00dbaded86f5a41c72a0ca23a0db196__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_592e9d76eb64ce2e10ec49dfc7227ecdb00dbaded86f5a41c72a0ca23a0db196_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_592e9d76eb64ce2e10ec49dfc7227ecdb00dbaded86f5a41c72a0ca23a0db196(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only owners are allowed to chang\")\n\n        mstore(add(memPtr, 32), \"e other owners\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063a6f9dae11461003b578063b4a99a4e14610057575b600080fd5b6100556004803603810190610050919061017f565b610075565b005b61005f610146565b60405161006c91906101de565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610103576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100fa906101f9565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081359050610179816102b0565b92915050565b6000602082840312156101955761019461025c565b5b60006101a38482850161016a565b91505092915050565b6101b58161022a565b82525050565b60006101c8602e83610219565b91506101d382610261565b604082019050919050565b60006020820190506101f360008301846101ac565b92915050565b60006020820190508181036000830152610212816101bb565b9050919050565b600082825260208201905092915050565b60006102358261023c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f4f6e6c79206f776e6572732061726520616c6c6f77656420746f206368616e6760008201527f65206f74686572206f776e657273000000000000000000000000000000000000602082015250565b6102b98161022a565b81146102c457600080fd5b5056fea2646970667358221220cac7ce6683ac33f5a03fbdafe70e1854c53b297b4d0bc99b5a1dda211c54cb5064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA6F9DAE1 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xB4A99A4E EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x17F JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH2 0x146 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x1DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x103 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA SWAP1 PUSH2 0x1F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x179 DUP2 PUSH2 0x2B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x195 JUMPI PUSH2 0x194 PUSH2 0x25C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A3 DUP5 DUP3 DUP6 ADD PUSH2 0x16A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B5 DUP2 PUSH2 0x22A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C8 PUSH1 0x2E DUP4 PUSH2 0x219 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D3 DUP3 PUSH2 0x261 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x212 DUP2 PUSH2 0x1BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235 DUP3 PUSH2 0x23C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F6E6C79206F776E6572732061726520616C6C6F77656420746F206368616E67 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65206F74686572206F776E657273000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2B9 DUP2 PUSH2 0x22A JUMP JUMPDEST DUP2 EQ PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0xC7 0xCE PUSH7 0x83AC33F5A03FBD 0xAF 0xE7 0xE XOR SLOAD 0xC5 EXTCODESIZE 0x29 PUSH28 0x4D0BC99B5A1DDA211C54CB5064736F6C634300080700330000000000 ",
							"sourceMap": "33:1067:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;931:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;849:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;931:167;1009:5;;;;;;;;;;995:19;;:10;:19;;;987:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;1083:8;1075:5;;:16;;;;;;;;;;;;;;;;;;931:167;:::o;849:20::-;;;;;;;;;;;;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;487:118;;:::o;611:366::-;753:3;774:67;838:2;833:3;774:67;:::i;:::-;767:74;;850:93;939:3;850:93;:::i;:::-;968:2;963:3;959:12;952:19;;611:366;;;:::o;983:222::-;1076:4;1114:2;1103:9;1099:18;1091:26;;1127:71;1195:1;1184:9;1180:17;1171:6;1127:71;:::i;:::-;983:222;;;;:::o;1211:419::-;1377:4;1415:2;1404:9;1400:18;1392:26;;1464:9;1458:4;1454:20;1450:1;1439:9;1435:17;1428:47;1492:131;1618:4;1492:131;:::i;:::-;1484:139;;1211:419;;;:::o;1717:169::-;1801:11;1835:6;1830:3;1823:19;1875:4;1870:3;1866:14;1851:29;;1717:169;;;;:::o;1892:96::-;1929:7;1958:24;1976:5;1958:24;:::i;:::-;1947:35;;1892:96;;;:::o;1994:126::-;2031:7;2071:42;2064:5;2060:54;2049:65;;1994:126;;;:::o;2249:117::-;2358:1;2355;2348:12;2372:233;2512:34;2508:1;2500:6;2496:14;2489:58;2581:16;2576:2;2568:6;2564:15;2557:41;2372:233;:::o;2611:122::-;2684:24;2702:5;2684:24;:::i;:::-;2677:5;2674:35;2664:63;;2723:1;2720;2713:12;2664:63;2611:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "153000",
								"executionCost": "24462",
								"totalCost": "177462"
							},
							"external": {
								"Owner()": "2511",
								"changeOwner(address)": "26867"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 33,
									"end": 1100,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 33,
									"end": 1100,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 33,
									"end": 1100,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 876,
									"end": 925,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 876,
									"end": 925,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 876,
									"end": 925,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 876,
									"end": 925,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 876,
									"end": 925,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 876,
									"end": 925,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 876,
									"end": 925,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 876,
									"end": 925,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 876,
									"end": 925,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 876,
									"end": 925,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 876,
									"end": 925,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 908,
									"end": 918,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 900,
									"end": 905,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 900,
									"end": 905,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 900,
									"end": 918,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 900,
									"end": 918,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 900,
									"end": 918,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 900,
									"end": 918,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 900,
									"end": 918,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 900,
									"end": 918,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 900,
									"end": 918,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 900,
									"end": 918,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 900,
									"end": 918,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 900,
									"end": 918,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 900,
									"end": 918,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 900,
									"end": 918,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 900,
									"end": 918,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 900,
									"end": 918,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 900,
									"end": 918,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 900,
									"end": 918,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 33,
									"end": 1100,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 33,
									"end": 1100,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33,
									"end": 1100,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 33,
									"end": 1100,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33,
									"end": 1100,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 33,
									"end": 1100,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33,
									"end": 1100,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cac7ce6683ac33f5a03fbdafe70e1854c53b297b4d0bc99b5a1dda211c54cb5064736f6c63430008070033",
									".code": [
										{
											"begin": 33,
											"end": 1100,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "PUSH",
											"source": 0,
											"value": "A6F9DAE1"
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "PUSH",
											"source": 0,
											"value": "B4A99A4E"
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33,
											"end": 1100,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 931,
											"end": 1098,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 931,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 931,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 931,
											"end": 1098,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 931,
											"end": 1098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 931,
											"end": 1098,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 931,
											"end": 1098,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 931,
											"end": 1098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 931,
											"end": 1098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 931,
											"end": 1098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 931,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 931,
											"end": 1098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 931,
											"end": 1098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 931,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 931,
											"end": 1098,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 931,
											"end": 1098,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 931,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 931,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 931,
											"end": 1098,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 931,
											"end": 1098,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 931,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 931,
											"end": 1098,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 849,
											"end": 869,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 849,
											"end": 869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 849,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 849,
											"end": 869,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 849,
											"end": 869,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 849,
											"end": 869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 849,
											"end": 869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 849,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 849,
											"end": 869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 849,
											"end": 869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 849,
											"end": 869,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 849,
											"end": 869,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 849,
											"end": 869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 849,
											"end": 869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 849,
											"end": 869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 849,
											"end": 869,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 849,
											"end": 869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 869,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 931,
											"end": 1098,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 931,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1014,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 995,
											"end": 1014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1005,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1014,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 995,
											"end": 1014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1014,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 987,
											"end": 1065,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1065,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 987,
											"end": 1065,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1065,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 987,
											"end": 1065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1065,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1065,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 987,
											"end": 1065,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 987,
											"end": 1065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 987,
											"end": 1065,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 987,
											"end": 1065,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 987,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1065,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 987,
											"end": 1065,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1065,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1065,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1065,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1065,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 987,
											"end": 1065,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 987,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1080,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1075,
											"end": 1080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1091,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1075,
											"end": 1091,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1091,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1091,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1075,
											"end": 1091,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1091,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1091,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1091,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1091,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1075,
											"end": 1091,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1091,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1091,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1091,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 931,
											"end": 1098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 931,
											"end": 1098,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 849,
											"end": 869,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 849,
											"end": 869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 849,
											"end": 869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 869,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 849,
											"end": 869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 869,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 849,
											"end": 869,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 849,
											"end": 869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 869,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 849,
											"end": 869,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 849,
											"end": 869,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 849,
											"end": 869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 849,
											"end": 869,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 592,
											"end": 597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 569,
											"end": 572,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 562,
											"end": 599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 611,
											"end": 977,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 611,
											"end": 977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 753,
											"end": 756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 838,
											"end": 840,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 833,
											"end": 836,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 774,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 774,
											"end": 841,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 774,
											"end": 841,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 774,
											"end": 841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 767,
											"end": 841,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 841,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 850,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 939,
											"end": 942,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 850,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 850,
											"end": 943,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 850,
											"end": 943,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 850,
											"end": 943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 968,
											"end": 970,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 963,
											"end": 966,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 959,
											"end": 971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 952,
											"end": 971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 952,
											"end": 971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 611,
											"end": 977,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 611,
											"end": 977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 611,
											"end": 977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 611,
											"end": 977,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 983,
											"end": 1205,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 983,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1080,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1116,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1117,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1117,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1195,
											"end": 1196,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1193,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1197,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1127,
											"end": 1198,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1127,
											"end": 1198,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1127,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 983,
											"end": 1205,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 983,
											"end": 1205,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 983,
											"end": 1205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 983,
											"end": 1205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 983,
											"end": 1205,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1211,
											"end": 1630,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1211,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1417,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1404,
											"end": 1413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1464,
											"end": 1473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1462,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1474,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1451,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1448,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1452,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1475,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1618,
											"end": 1622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1492,
											"end": 1623,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1492,
											"end": 1623,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1492,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1630,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1630,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1835,
											"end": 1841,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1833,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1879,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1870,
											"end": 1873,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1880,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1892,
											"end": 1988,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1892,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1936,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1958,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1958,
											"end": 1982,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1958,
											"end": 1982,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1958,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1947,
											"end": 1982,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1947,
											"end": 1982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 1988,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 1988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 1988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 1988,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1994,
											"end": 2120,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1994,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2113,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2064,
											"end": 2069,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 2120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 2120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 2120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 2120,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2249,
											"end": 2366,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2249,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2356,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2360,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2605,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2372,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2512,
											"end": 2546,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C79206F776E6572732061726520616C6C6F77656420746F206368616E67"
										},
										{
											"begin": 2508,
											"end": 2509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2496,
											"end": 2510,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2547,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2597,
											"name": "PUSH",
											"source": 1,
											"value": "65206F74686572206F776E657273000000000000000000000000000000000000"
										},
										{
											"begin": 2576,
											"end": 2578,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2568,
											"end": 2574,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2598,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2605,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2611,
											"end": 2733,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2611,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2684,
											"end": 2708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2702,
											"end": 2707,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2684,
											"end": 2708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2684,
											"end": 2708,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2684,
											"end": 2708,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2684,
											"end": 2708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2682,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2664,
											"end": 2727,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2720,
											"end": 2721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2713,
											"end": 2725,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2727,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2664,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 2733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 2733,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"Owner()": "b4a99a4e",
							"changeOwner(address)": "a6f9dae1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/4_Test.sol\":\"Test\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/4_Test.sol\":{\"keccak256\":\"0xa5e0132590a803ec74e74540950ade3f88d852f0103d3a85d94b91bb838e4a0b\",\"urls\":[\"bzz-raw://82ec8286d6921f3a5b99663d2c5418c246a7505cc750ba86c04b20857585dbee\",\"dweb:/ipfs/QmcNrfxiuAuWGTF8YsjGvvvWsKt7NAATZewgzKKSZCy1m9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/4_Test.sol:Test",
								"label": "Owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/4_Test.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/4_Test.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/4_Test.sol": {
				"ast": {
					"absolutePath": "contracts/4_Test.sol",
					"exportedSymbols": {
						"Test": [
							31
						]
					},
					"id": 32,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 31,
							"linearizedBaseContracts": [
								31
							],
							"name": "Test",
							"nameLocation": "42:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "b4a99a4e",
									"id": 3,
									"mutability": "mutable",
									"name": "Owner",
									"nameLocation": "864:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 31,
									"src": "849:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "849:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "890:35:0",
										"statements": [
											{
												"expression": {
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "Owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "900:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 7,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "908:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "908:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "900:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "900:18:0"
											}
										]
									},
									"id": 12,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "887:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "890:0:0"
									},
									"scope": 31,
									"src": "876:49:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "977:121:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 18,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "995:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 19,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "995:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 20,
																"name": "Owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "1009:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "995:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e6572732061726520616c6c6f77656420746f206368616e6765206f74686572206f776e657273",
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1016:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_592e9d76eb64ce2e10ec49dfc7227ecdb00dbaded86f5a41c72a0ca23a0db196",
																"typeString": "literal_string \"Only owners are allowed to change other owners\""
															},
															"value": "Only owners are allowed to change other owners"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_592e9d76eb64ce2e10ec49dfc7227ecdb00dbaded86f5a41c72a0ca23a0db196",
																"typeString": "literal_string \"Only owners are allowed to change other owners\""
															}
														],
														"id": 17,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "987:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "987:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "987:78:0"
											},
											{
												"expression": {
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 25,
														"name": "Owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "1075:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 26,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "1083:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1075:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1075:16:0"
											}
										]
									},
									"functionSelector": "a6f9dae1",
									"id": 30,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeOwner",
									"nameLocation": "940:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "960:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "952:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "952:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "951:18:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "977:0:0"
									},
									"scope": 31,
									"src": "931:167:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 32,
							"src": "33:1067:0",
							"usedErrors": []
						}
					],
					"src": "0:1100:0"
				},
				"id": 0
			}
		}
	}
}